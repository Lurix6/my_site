{"version":3,"sources":["components/header.js","components/drawer.js","components/buttons.js","components/list.js","components/form.js","App.js","serviceWorker.js","index.js"],"names":["styles","root","flexGrow","background","blue","orange","grow","menuButton","marginLeft","marginRight","MenuAppBar","state","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","_this$props","this","props","classes","driwerOpen","open","Boolean","react_default","a","createElement","AppBar_default","className","position","Toolbar_default","IconButton_default","color","aria-label","onClick","Menu_default","Typography_default","variant","aria-owns","undefined","aria-haspopup","MoreVert_default","core_Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","Component","withStyles","ListItemLink","ListItem_default","Object","assign","button","component","AppDrawer","isDrawerOpen","onToggle","Drawer_default","List_default","Icon_default","ListItemText_default","primary","ListItemIcon_default","Drafts_default","icon","Tab_default","Divider_default","href","theme","padding","teal","flexDirection","&:hover","grey","margin","spacing","unit","leftIcon","rightIcon","iconSmall","fontSize","fab","cyan","style","marginBottom","Button_default","onAdd","disabled","itemChecked","length","onDelate","console","log","CloudUpload_default","Fab_default","right","bottom","openModal","green","checked","AppList","items","map","value","index","key","role","dense","onCheck","Checkbox_default","checkedIcon","tabIndex","disableRipple","name","secondary","description","ListItemSecondaryAction_default","Comment_default","AppForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errors","_this2","TextField_default","error","helperText","label","fullWidth","placeholder","onChange","target","App","isPopoverOpen","isModalOpen","isSnackbarOpen","popoverElement","selectedDate","itemsList","handleDateChange","date","item","push","drawer","header","buttons","i","filter","Popover_default","paper","popover","form_AppForm","list","idx","Dialog_default","aria-labelledby","aria-describedby","material_ui_pickers_esm","utils","DateFnsUtils","Grid_default","container","grid","justify","animateYearScrolling","mode","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","Snackbar_default","autoHideDuration","message","width","marginTop","window","location","hostname","match","createMuiTheme","palette","type","typography","useNextVatiants","ReactDOM","render","core_styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59819f18.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {blue, orange} from '@material-ui/core/colors';\n\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    background: \"linear-gradient(270deg, \"+blue[600]+\", \"+orange[600]+\")\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass MenuAppBar extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n\n\n\n  render() {\n    const { classes, driwerOpen } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div>\n        <AppBar className={classes.root} position=\"static\" >\n          <Toolbar>\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={driwerOpen}  >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Material UI\n            </Typography>\n              <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <MoreVertIcon />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.handleClose}>Обновить</MenuItem>\n                  <MenuItem onClick={this.handleClose}>Помощ</MenuItem>\n                  <MenuItem onClick={this.handleClose}>Вихід</MenuItem>\n\n                </Menu>\n              </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MenuAppBar);\n","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport { withStyles } from '@material-ui/core/styles'\nimport Icon from '@material-ui/core/Icon'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport TabIcon from '@material-ui/icons/Tab'\nimport {teal, grey} from '@material-ui/core/colors/'\n\n\nconst styles = theme => ({\n  root: {\n    padding:'10px',\n    background: teal[200],\n    flexDirection: 'row-reverse',\n    '&:hover': {\n      background: grey[300],\n      color: teal[300]\n\n    }}});\n\n\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\n\nclass AppDrawer extends React.Component{\n\n  render(){\n    const { isDrawerOpen, onToggle }  = this.props\n    const { classes } = this.props\n\n\n      return(\n        <Drawer\n            open={isDrawerOpen}\n            onClose={() => onToggle(false)}\n        >\n        <List component=\"nav\">\n               <ListItem button  className={classes.root}>\n                 <Icon>inbox</Icon>\n                 <ListItemText primary=\"Inbox\" />\n               </ListItem>\n               <ListItem button>\n                 <ListItemIcon>\n                   <DraftsIcon />\n                 </ListItemIcon>\n                 <ListItemText primary=\"Drafts\" />\n               </ListItem>\n               <ListItem button>\n                <ListItemIcon>\n                  <Icon className={classes.icon}>list</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"List\" />\n               </ListItem>\n               <ListItem button>\n                <ListItemIcon>\n                    <Icon>subject</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"subject\" />\n               </ListItem>\n               <ListItem button>\n                <ListItemIcon>\n                  <TabIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"subject\" />\n               </ListItem>\n             </List>\n             <Divider />\n             <List component=\"nav\">\n               <ListItem button>\n                 <ListItemText primary=\"Trash\" />\n               </ListItem>\n               <ListItemLink href=\"#simple-list\">\n                 <ListItemText primary=\"Spam\" />\n               </ListItemLink>\n            </List>\n        </Drawer>\n\n      )\n    }\n}\n\nexport default withStyles(styles)(AppDrawer);\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Fab from '@material-ui/core/Fab';\nimport Icon from '@material-ui/core/Icon';\nimport cyan from '@material-ui/core/colors/cyan'\n\n\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  fab: {\n    margin: theme.spacing.unit,\n    background: cyan[500],\n    '&:hover': {\n        background: cyan[700],\n    }\n  },\n});\n\nfunction AppButtons (props){\n  const { classes } = props\n  return(\n    <div style={{marginBottom:40}}>\n        <Button className={classes.button} variant='contained' color='primary' onClick={(event)=> props.onAdd(event.currentTarget)} >Add element</Button>\n        <Button className={classes.button} variant='contained' color='secondary' disabled={props.itemChecked.length === 0} onClick={()=> props.onDelate()}>Delate selected element</Button>\n\n        <Button className={classes.button} variant=\"contained\" color=\"default\" onClick={()=> console.log('add Element')}>\n          Upload\n          <CloudUploadIcon className={classes.rightIcon}/>\n        </Button>\n        <Fab color=\"secondary\" aria-label=\"Edit\" className={classes.fab} style={{position:'fixed', right:50, bottom:50}} onClick={props.openModal}>\n           <Icon>edit_icon</Icon>\n        </Fab>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(AppButtons)\n","import React from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Icon from '@material-ui/core/Icon'\nimport { withStyles } from '@material-ui/core/styles'\nimport green from '@material-ui/core/colors/green'\n\n\nconst styles = {\n  root: {\n    color: green[600],\n  },\n  checked: {\n    color: green[100],\n\n  },\n};\n\nclass AppList extends React.Component {\n\n  render(){\n      const { classes } = this.props\n        return(\n          <List >\n            {this.props.items.map((value, index) => (\n              <div>\n                <ListItem key={index} role={undefined} dense button onClick={() => this.props.onCheck(index)}>\n                  <Checkbox\n                    icon={<Icon>mood_bad</Icon>}\n                    checkedIcon ={<Icon>mood</Icon>}\n                    checked={value.checked}\n                    tabIndex={-1}\n                    disableRipple\n                    classes={{\n                      root: classes.root,\n                      checked: classes.checked, // Не працює ???????/\n                    }}\n                  />\n                  <ListItemText primary={value.name} secondary={value.description} />\n                  <ListItemSecondaryAction>\n                    <IconButton aria-label=\"Comments\">\n                      <CommentIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider />\n                </div>\n            ))}\n    </List>\n  )}\n}\n\n\n\nexport default withStyles(styles)(AppList)\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nexport default class AppForm extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state={\n      name: '',\n      description: '',\n      errors: {\n        name: '',\n        description: ''\n      }\n    }\n  }\n\n    render(){\n\n      return(<div>\n          <TextField\n            error={this.state.errors.name}\n            helperText={this.state.errors.name}\n            name='hello'\n            label=\"Введіть назву\"\n            fullWidth\n            margin=\"dense\"\n            placeholder=\"Назва\"\n            onChange={(event) => {this.setState({name: event.target.value})}}\n        />\n          <TextField\n            error={this.state.errors.description}\n            helperText={this.state.errors.description}\n            label=\"Введіть опис\"\n            fullWidth\n            margin=\"dense\"\n            placeholder=\"Опис\"\n            onChange={(event) => {this.setState({description: event.target.value})}}\n            />\n        <Button color=\"secondary\" onClick={this.onAdd} >\n          Додати\n        </Button>\n        </div>\n\n      )\n    }\n\n    onAdd = () => {\n      let errors = {}\n\n      if(!this.state.name){errors.name = 'Імя не може бути порожнім'}\n      if(!this.state.description){errors.description = 'Опис не може бути порожнім'}\n\n\n      if (errors.name || errors.description) {\n        this.setState({errors})\n        return\n      }\n\n      this.props.onAdd({\n        name: this.state.name,\n        description: this.state.description,\n        checked: false\n      })\n\n      this.setState({name:'', description: '',errors: {\n        name:'',description:''\n      }})\n\n    }\n\n}\n","import React, { Component } from 'react';\nimport AppBar from './components/header'\nimport AppDrawer from './components/drawer'\nimport AppButtons from './components/buttons'\nimport AppList from './components/list'\nimport Popover from '@material-ui/core/Popover'\nimport AppForm from './components/form'\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst styles = () => ({\n  popover: {\n    width: '150px',\n    padding: '15px 30px',\n\n  },\n  grid: {\n    marginTop:'10px'\n  }\n});\n\nclass App extends Component {\n\n\n  state = {\n      isDrawerOpen: false,\n      isPopoverOpen: false,\n      isModalOpen: false,\n      isSnackbarOpen: false,\n      popoverElement: null,\n      selectedDate: '2018-01-01T00:00:00.000Z',\n      itemsList: [\n        {\n          name: 'element1',\n          description: 'some description',\n          checked: true\n        },\n        {\n          name: 'element2',\n          description: 'some description',\n          checked: true\n        },\n        {\n          name: 'element3',\n          description: 'some description',\n          checked: false\n        },\n        {\n          name: 'element4',\n          description: 'some description',\n          checked: false\n        },\n      ]\n\n  }\n\n  render() {\n    const {classes} = this.props\n    const { selectedDate } = this.state;\n\n    return (\n      <div>\n        <AppDrawer isDrawerOpen={this.state.isDrawerOpen} onToggle={(isDrawerOpen) => this.setState({isDrawerOpen})}/>\n        <AppBar driwerOpen={() => this.setState({isDrawerOpen: true})} />\n        <div className='container'>\n          <AppButtons\n              itemChecked={this.state.itemsList.map(i => i.checked).filter(i => i)}\n              onDelate={() => {\n                let itemsList = this.state.itemsList.filter(i => !i.checked)\n                this.setState({\n                  itemsList\n                })\n              }}\n              onAdd={(popoverElement)=> {this.setState({popoverElement,isPopoverOpen: true })}}\n              openModal={() => {this.setState({isModalOpen: true})}}\n              />\n              <Popover\n               classes={{\n                 paper:classes.popover}}\n               open={this.state.isPopoverOpen}\n               anchorEl={this.state.popoverElement}\n               onClose={()=>{this.setState({isPopoverOpen: false})}}\n               anchorOrigin={{\n                 vertical: 'bottom',\n                 horizontal: 'center',\n               }}\n               transformOrigin={{\n                 vertical: 'top',\n                 horizontal: 'center',\n               }}\n\n             >\n               <AppForm\n                  onAdd={this.onAdd}\n                />\n             </Popover>\n\n          <AppList\n              items={this.state.itemsList}\n              onCheck={(idx) => {\n                let {itemsList} = this.state\n                itemsList[idx].checked = !this.state.itemsList[idx].checked\n                this.setState({ itemsList })\n              }}\n          />\n        </div>\n        <Dialog\n          open={this.state.isModalOpen}\n          onClose={() => {this.setState({isModalOpen: false})}}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container className={classes.grid} justify=\"space-around\">\n          <DatePicker\n            label=\"Basic example\"\n            value={selectedDate}\n            onChange={this.handleDateChange}\n            animateYearScrolling\n            mode='landscape'\n          />\n          </Grid>\n        </MuiPickersUtilsProvider>\n          <DialogTitle >{\"Use Google's location service?\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Let Google help apps determine location. This means sending anonymous location data to\n              Google, even when no apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n          <Button onClick={() => {this.setState({isModalOpen: false})}} color=\"primary\">\n              Disagree\n            </Button>\n            <Button onClick={() => {this.setState({isModalOpen: false})}} color=\"primary\" autoFocus>\n              Agree\n            </Button>\n\n          </DialogActions>\n        </Dialog>\n        <Snackbar\n         anchorOrigin={{\n           vertical: 'bottom',\n           horizontal: 'left',\n         }}\n         open={this.state.isSnackbarOpen}\n         autoHideDuration={3000}\n         onClose={() => {this.setState({isSnackbarOpen: false})}}\n\n         message={<span id=\"message-id\">{''+this.state.selectedDate}</span>}\n       />\n      </div>\n    );\n  }\n\n\n  handleDateChange = date => {\n      this.setState({ selectedDate: date, isSnackbarOpen: true });\n    };\n\n\n  onAdd = (item) => {\n    let itemsList = this.state.itemsList\n\n    itemsList.push(item)\n    this.setState({ isPopoverOpen: false, itemsList})\n\n  }\n\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles/';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light'//dark\n  },\n  typography: {useNextVatiants: true}\n})\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}